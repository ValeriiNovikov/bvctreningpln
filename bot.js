// const Parse = require('parse/node');
// Parse.initialize("PWQQmvXHWwZLhyHpSkXstoA2IgY8iH0Bp2Aw4goy", "Egw1Ud0UenOGl7ckfhIYKUIHsQvVd63ZRnL2njWt");
// Parse.serverURL = 'https://parseapi.back4app.com';

const TelegramBot = require('node-telegram-bot-api');
const path = require('path');
const fs = require('fs').promises;

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
require('dotenv').config();
const TOKEN = process.env.TELEGRAM_BOT_TOKEN;

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
if (!TOKEN) {
  console.error("–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å TELEGRAM_BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω");
  process.exit(1);
}

// –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
const bot = new TelegramBot(TOKEN, { polling: true });

// –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const INPUT_PLAYERS = "input_players";
const CHOOSE_LEVEL = "choose_level";
const CHOOSE_THEME = "choose_theme";

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const userData = new Map();

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
const MESSAGES = {
  WELCOME: "–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –ø–æ –≤–æ–ª–µ–π–±–æ–ª—É.\n\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–°—Ç–∞—Ä—Ç' —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.",
  INPUT_PLAYERS: "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ (–æ—Ç 4 –¥–æ 12):",
  INVALID_PLAYERS: "‚ùå –û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 4 –¥–æ 12:",
  PLAYERS_SUCCESS: (count) => `‚úÖ –û—Ç–ª–∏—á–Ω–æ! –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤: ${count}\n–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å:`,
  CHOOSE_LEVEL: "–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å:",
  CHOOSE_THEME: (level, players) => `–í—ã–±—Ä–∞–Ω —É—Ä–æ–≤–µ–Ω—å: ${level}\n–ò–≥—Ä–æ–∫–æ–≤: ${players}\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:`,
  TRAINING_READY: (level, players, theme) =>
    `‚úÖ –û—Ç–ª–∏—á–Ω–æ! –ü–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≥–æ—Ç–æ–≤:\n\n‚Ä¢ –£—Ä–æ–≤–µ–Ω—å: ${level}\n‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤: ${players}\n‚Ä¢ –¢–µ–º–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: ${theme}\n\n–•–æ—Ä–æ—à–µ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏! üèê`,
  FILE_NOT_FOUND: (level) => `‚ùå –§–∞–π–ª—ã —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏ –¥–ª—è —É—Ä–æ–≤–Ω—è ${level} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.`,
  ERROR_SENDING_IMAGES: (error) => `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–∞—Ä—Ç–∏–Ω–æ–∫: ${error.message}`
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
function createKeyboard(buttons, resize = true) {
  return {
    keyboard: buttons.map(row => Array.isArray(row) ? row : [row]),
    resize_keyboard: resize
  };
}

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
const KEYBOARDS = {
  START: createKeyboard(['–°—Ç–∞—Ä—Ç']),
  BACK: createKeyboard(['–ù–∞–∑–∞–¥']),
  LEVELS: createKeyboard([
    ["0 —É—Ä–æ–≤–µ–Ω—å", "1 —É—Ä–æ–≤–µ–Ω—å", "2 —É—Ä–æ–≤–µ–Ω—å"],
    ["–ù–∞–∑–∞–¥"]
  ]),
  THEMES_0: createKeyboard([
    ["–ë—Ä–æ—Å–∫–∏ –∏–∑-–∑–∞ –≥–æ–ª–æ–≤—ã, –ë—Ä–æ—Å–∫–∏ —Å–Ω–∏–∑—É", "–ë—Ä–æ—Å–∫–∏ –∏–∑-–∑–∞ –≥–æ–ª–æ–≤—ã, –ë—Ä–æ—Å–∫–∏ –æ—Ç –ª–±–∞"],
    ["–ù–∞–∑–∞–¥"]
  ]),
  THEMES_1: createKeyboard([
    ["–ü–æ–¥–∞—á–∞, –ø–µ—Ä–µ–¥–∞—á–∞ —Å–Ω–∏–∑—É", "–ü–æ–¥–∞—á–∞, –ø–µ—Ä–µ–¥–∞—á–∞ —Å–≤–µ—Ä—Ö—É"],
    ["–ù–∞–∑–∞–¥"]
  ]),
  THEMES_2: createKeyboard([
    ["–ü–æ–¥–∞—á–∞, –ø–µ—Ä–µ–¥–∞—á–∞ —Å–Ω–∏–∑—É", "–ü–æ–¥–∞—á–∞, –ø–µ—Ä–µ–¥–∞—á–∞ —Å–≤–µ—Ä—Ö—É"],
    ["–ê—Ç–∞–∫–∞, –ø–µ—Ä–µ–¥–∞—á–∞ —Å–Ω–∏–∑—É", "–ê—Ç–∞–∫–∞, –ø–µ—Ä–µ–¥–∞—á–∞ —Å–≤–µ—Ä—Ö—É"],
    ["–ù–∞–∑–∞–¥"]
  ]),
  NEW_TRAINING: createKeyboard(['–ù–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞'])
};

// –í–∞–ª–∏–¥–Ω—ã–µ —Ç–µ–º—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É—Ä–æ–≤–Ω—è
const VALID_THEMES = {
  0: ["–ë—Ä–æ—Å–∫–∏ –∏–∑-–∑–∞ –≥–æ–ª–æ–≤—ã, –ë—Ä–æ—Å–∫–∏ —Å–Ω–∏–∑—É", "–ë—Ä–æ—Å–∫–∏ –∏–∑-–∑–∞ –≥–æ–ª–æ–≤—ã, –ë—Ä–æ—Å–∫–∏ –æ—Ç –ª–±–∞"],
  1: ["–ü–æ–¥–∞—á–∞, –ø–µ—Ä–µ–¥–∞—á–∞ —Å–Ω–∏–∑—É", "–ü–æ–¥–∞—á–∞, –ø–µ—Ä–µ–¥–∞—á–∞ —Å–≤–µ—Ä—Ö—É"],
  2: ["–ü–æ–¥–∞—á–∞, –ø–µ—Ä–µ–¥–∞—á–∞ —Å–Ω–∏–∑—É", "–ü–æ–¥–∞—á–∞, –ø–µ—Ä–µ–¥–∞—á–∞ —Å–≤–µ—Ä—Ö—É", "–ê—Ç–∞–∫–∞, –ø–µ—Ä–µ–¥–∞—á–∞ —Å–Ω–∏–∑—É", "–ê—Ç–∞–∫–∞, –ø–µ—Ä–µ–¥–∞—á–∞ —Å–≤–µ—Ä—Ö—É"]
};

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  goBackToStart(chatId);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;
  const user = userData.get(chatId);

  try {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–°—Ç–∞—Ä—Ç"
    if (text === '–°—Ç–∞—Ä—Ç' && !user) {
      return handleStartButton(chatId);
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞"
    if (text === '–ù–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞') {
      return goBackToStart(chatId);
    }

    if (!user) return;

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
    if (text === '–ù–∞–∑–∞–¥') {
      return handleBackButton(chatId, user);
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–≥—Ä–æ–∫–æ–≤
    if (user.menu_state === INPUT_PLAYERS) {
      return handlePlayersInput(chatId, user, text);
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è
    if (user.menu_state === CHOOSE_LEVEL) {
      return handleLevelSelection(chatId, user, text);
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã
    if (user.menu_state === CHOOSE_THEME) {
      return handleThemeSelection(chatId, user, text);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    bot.sendMessage(chatId, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–°—Ç–∞—Ä—Ç"
function handleStartButton(chatId) {
  userData.set(chatId, {
    menu_state: INPUT_PLAYERS
  });

  bot.sendMessage(chatId, MESSAGES.INPUT_PLAYERS, {
    reply_markup: KEYBOARDS.BACK
  });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
function handleBackButton(chatId, user) {
  switch (user.menu_state) {
    case INPUT_PLAYERS:
      goBackToStart(chatId);
      break;
    case CHOOSE_LEVEL:
      user.menu_state = INPUT_PLAYERS;
      userData.set(chatId, user);
      bot.sendMessage(chatId, MESSAGES.INPUT_PLAYERS, {
        reply_markup: KEYBOARDS.BACK
      });
      break;
    case CHOOSE_THEME:
      user.menu_state = CHOOSE_LEVEL;
      userData.set(chatId, user);
      bot.sendMessage(chatId, MESSAGES.CHOOSE_LEVEL, {
        reply_markup: KEYBOARDS.LEVELS
      });
      break;
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–≥—Ä–æ–∫–æ–≤
function handlePlayersInput(chatId, user, text) {
  try {
    const playersCount = parseInt(text);

    if (playersCount >= 4 && playersCount <= 12) {
      user.players_count = playersCount;
      user.menu_state = CHOOSE_LEVEL;
      userData.set(chatId, user);

      bot.sendMessage(chatId, MESSAGES.PLAYERS_SUCCESS(playersCount), {
        reply_markup: KEYBOARDS.LEVELS
      });
    } else {
      bot.sendMessage(chatId, MESSAGES.INVALID_PLAYERS, {
        reply_markup: KEYBOARDS.BACK
      });
    }
  } catch (error) {
    bot.sendMessage(chatId, MESSAGES.INVALID_PLAYERS, {
      reply_markup: KEYBOARDS.BACK
    });
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è
function handleLevelSelection(chatId, user, text) {
  let level;
  let keyboard;

  switch (text) {
    case "0 —É—Ä–æ–≤–µ–Ω—å":
      level = 0;
      keyboard = KEYBOARDS.THEMES_0;
      break;
    case "1 —É—Ä–æ–≤–µ–Ω—å":
      level = 1;
      keyboard = KEYBOARDS.THEMES_1;
      break;
    case "2 —É—Ä–æ–≤–µ–Ω—å":
      level = 2;
      keyboard = KEYBOARDS.THEMES_2;
      break;
    default:
      return bot.sendMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤", {
        reply_markup: KEYBOARDS.LEVELS
      });
  }

  user.selected_level = level;
  user.menu_state = CHOOSE_THEME;
  userData.set(chatId, user);

  bot.sendMessage(chatId, MESSAGES.CHOOSE_THEME(text, user.players_count), {
    reply_markup: keyboard
  });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã
function handleThemeSelection(chatId, user, text) {
  const selectedLevel = user.selected_level || 0;
  const playersCount = user.players_count || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ';

  if (VALID_THEMES[selectedLevel].includes(text)) {
    bot.sendMessage(chatId, MESSAGES.TRAINING_READY(selectedLevel, playersCount, text), {
      reply_markup: KEYBOARDS.NEW_TRAINING
    });

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
    sendLevelImages(chatId, selectedLevel, playersCount)
      .then(() => {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
        if (selectedLevel === 0) {
          return sendTrainingStructureLevel0(chatId, text);
        } else {
          return sendTrainingStructureLevel12(chatId, text);
        }
      })
      .then(() => {
        // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
        userData.delete(chatId);
      })
      .catch(error => {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:', error);
        bot.sendMessage(chatId, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
      });
  } else {
    // –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É—Ä–æ–≤–Ω—è
    const keyboard = selectedLevel === 0 ? KEYBOARDS.THEMES_0 :
                    selectedLevel === 1 ? KEYBOARDS.THEMES_1 : KEYBOARDS.THEMES_2;

    bot.sendMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤", {
      reply_markup: keyboard
    });
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Ä—Ç–∏–Ω–æ–∫
function sendLevelImages(chatId, level, playersCount) {
  return new Promise(async (resolve, reject) => {
    try {
      if (level === 0) {
        const alwaysFile = "position/0/always.png";
        try {
          await fs.access(alwaysFile);
          await bot.sendPhoto(chatId, alwaysFile, {
            caption: "–£—Ä–æ–≤–µ–Ω—å 0: –ë–∞–∑–æ–≤–∞—è —Å—Ö–µ–º–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏"
          });
          resolve();
        } catch (error) {
          await bot.sendMessage(chatId, MESSAGES.FILE_NOT_FOUND(level));
          resolve(); // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–∂–µ –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω
        }
      } else {
        const pFile = `position/${level}/p${playersCount}.png`;
        const tFile = `position/${level}/t${playersCount}.png`;

        try {
          await fs.access(pFile);
          await fs.access(tFile);

          await bot.sendPhoto(chatId, pFile, {
            caption: `–£—Ä–æ–≤–µ–Ω—å ${level}: –°—Ö–µ–º–∞ —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–ª—è ${playersCount} –∏–≥—Ä–æ–∫–æ–≤`
          });

          await bot.sendPhoto(chatId, tFile, {
            caption: `–£—Ä–æ–≤–µ–Ω—å ${level}: –ü–ª–∞–Ω —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –¥–ª—è ${playersCount} –∏–≥—Ä–æ–∫–æ–≤`
          });
          resolve();
        } catch (error) {
          await bot.sendMessage(chatId, MESSAGES.FILE_NOT_FOUND(level));
          resolve(); // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–∂–µ –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω
        }
      }
    } catch (error) {
      await bot.sendMessage(chatId, MESSAGES.ERROR_SENDING_IMAGES(error));
      resolve(); // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    }
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –¥–ª—è —É—Ä–æ–≤–Ω—è 0
function sendTrainingStructureLevel0(chatId, theme) {
  return new Promise((resolve, reject) => {
    try {
      // –†–∞–∑–¥–µ–ª—è–µ–º —Ç–µ–º—É –Ω–∞ –¥–≤–µ —á–∞—Å—Ç–∏
      const themes = theme.split(", ");
      const theme1 = themes[0] || "";
      const theme2 = themes[1] || "";

      const structureMessage =
          "üèê *–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ (–£—Ä–æ–≤–µ–Ω—å 0):*\n\n" +
          "üîπ *–ë–ª–æ–∫ 1: –ù–∞—á–∞–ª–æ*\n" +
          "‚Ä¢ –°–±–æ—Ä —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–≤/–û–±—ä—è–≤–ª–µ–Ω–∏—è –ø–ª–∞–Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n" +
          "  - –í–†: 1 –º–∏–Ω—É—Ç–∞\n" +
          "  - –¢–µ–∫—Å—Ç: –¢—É—Ç –±—É–¥–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è –ø—É–Ω–∫—Ç–∞\n" +
          "‚Ä¢ –ü–æ–¥–≤–∏–∂–Ω–∞—è –∏–≥—Ä–∞\n" +
          "  - –í–†: 5 –º–∏–Ω—É—Ç\n" +
          "  - –¢–µ–∫—Å—Ç: –¢—É—Ç –±—É–¥–µ—Ç –ø–æ–¥—Ä—É–∂–∞—Ç—Å—è –∑–∞–¥–∞–Ω–∏—è –¥–ª—è –ø–æ–¥–≤–∏–∂–Ω–æ–π –∏–≥—Ä—ã\n" +
          "‚Ä¢ –í–æ–¥–∞\n" +
          "  - –í–†: 1 –º–∏–Ω—É—Ç–∞\n\n" +

          `üîπ *–ë–ª–æ–∫ 2: ${theme1}*\n` +
          "‚Ä¢ –¢–µ—Ö–Ω–∏–∫–∞ —Å –∏–≥—Ä–æ–≤—ã–º –∑–∞–¥–∞–Ω–∏–µ–º\n" +
          "  - –í–†: 10 –º–∏–Ω—É—Ç\n" +
          "  - –¢–µ–∫—Å—Ç: –¢—É—Ç –±—É–¥–µ—Ç –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å—Å—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è 1 —Ç–µ–º—ã\n" +
          "‚Ä¢ –ü–æ–¥–≤–∏–∂–Ω–∞—è –∏–≥—Ä–∞\n" +
          "  - –í–†: 5 –º–∏–Ω—É—Ç\n" +
          "  - –¢–µ–∫—Å—Ç: –¢—É—Ç –±—É–¥–µ—Ç –ø–æ–¥—Ä—É–∂–∞—Ç—Å—è –∑–∞–¥–∞–Ω–∏—è –¥–ª—è –ø–æ–¥–≤–∏–∂–Ω–æ–π –∏–≥—Ä—ã\n" +
          "‚Ä¢ –í–æ–¥–∞\n" +
          "  - –í–†: 1 –º–∏–Ω—É—Ç–∞\n\n" +

          `üîπ *–ë–ª–æ–∫ 3: ${theme2}*\n` +
          "‚Ä¢ –¢–µ—Ö–Ω–∏–∫–∞ —Å –∏–≥—Ä–æ–≤—ã–º –∑–∞–¥–∞–Ω–∏–µ–º\n" +
          "  - –í–†: 10 –º–∏–Ω—É—Ç\n" +
          "  - –¢–µ–∫—Å—Ç: –¢—É—Ç –±—É–¥–µ—Ç –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å—Å—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è 2 —Ç–µ–º—ã\n" +
          "‚Ä¢ –ü–æ–¥–≤–∏–∂–Ω–∞—è –∏–≥—Ä–∞\n" +
          "  - –í–†: 5 –º–∏–Ω—É—Ç\n" +
          "  - –¢–µ–∫—Å—Ç: –¢—É—Ç –±—É–¥–µ—Ç –ø–æ–¥—Ä—É–∂–∞—Ç—Å—è –∑–∞–¥–∞–Ω–∏—è –¥–ª—è –ø–æ–¥–≤–∏–∂–Ω–æ–π –∏–≥—Ä—ã\n" +
          "‚Ä¢ –í–æ–¥–∞\n" +
          "  - –í–†: 1 –º–∏–Ω—É—Ç–∞\n\n" +

          "üîπ *–ë–ª–æ–∫ 4: –û–±–µ —Ç–µ–º—ã*\n" +
          "‚Ä¢ –¢–µ—Ö–Ω–∏–∫–∞ —Å –∏–≥—Ä–æ–≤—ã–º –∑–∞–¥–∞–Ω–∏–µ–º\n" +
          "  - –í–†: 10 –º–∏–Ω—É—Ç\n" +
          "  - –¢–µ–∫—Å—Ç: –¢—É—Ç –±—É–¥–µ—Ç –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å—Å—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è 2 —Ç–µ–º—ã\n" +
          "‚Ä¢ –ü–æ–¥–≤–∏–∂–Ω–∞—è –∏–≥—Ä–∞\n" +
          "  - –í–†: 5 –º–∏–Ω—É—Ç\n" +
          "  - –¢–µ–∫—Å—Ç: –¢—É—Ç –±—É–¥–µ—Ç –ø–æ–¥—Ä—É–∂–∞—Ç—Å—è –∑–∞–¥–∞–Ω–∏—è –¥–ª—è –ø–æ–¥–≤–∏–∂–Ω–æ–π –∏–≥—Ä—ã\n" +
          "‚Ä¢ –ü–æ–¥–≤–µ–¥–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤\n" +
          "  - –í–†: 5 –º–∏–Ω—É—Ç\n\n";

      bot.sendMessage(chatId, structureMessage, { parse_mode: 'Markdown' })
        .then(() => resolve())
        .catch(error => reject(error));
    } catch (error) {
      reject(error);
    }
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –¥–ª—è —É—Ä–æ–≤–Ω–µ–π 1 –∏ 2
function sendTrainingStructureLevel12(chatId, theme) {
  return new Promise((resolve, reject) => {
    try {
      // –†–∞–∑–¥–µ–ª—è–µ–º —Ç–µ–º—É –Ω–∞ –¥–≤–µ —á–∞—Å—Ç–∏
      const themes = theme.split(", ");
      const theme1 = themes[0] || "";
      const theme2 = themes[1] || "";

      const structureMessage =
          "üèê *–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:*\n\n" +
          "üîπ *–ë–ª–æ–∫ 1: –ù–∞—á–∞–ª–æ*\n" +
          "‚Ä¢ –°–±–æ—Ä —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–æ–≤/–û–±—ä—è–≤–ª–µ–Ω–∏—è –ø–ª–∞–Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n" +
          "  - –í–†: 1 –º–∏–Ω—É—Ç–∞\n" +
          "  - –¢–µ–∫—Å—Ç: –¢—É—Ç –±—É–¥–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è –ø—É–Ω–∫—Ç–∞\n" +
          "‚Ä¢ –†–∞–∑–º–∏–Ω–∫–∞\n" +
          "  - –í–†: 5 –º–∏–Ω—É—Ç\n" +
          "  - –¢–µ–∫—Å—Ç: –¢—É—Ç –±—É–¥–µ—Ç –ø–æ–¥—Ä—É–∂–∞—Ç—Å—è –∑–∞–¥–∞–Ω–∏—è –¥–ª—è —Ä–∞–∑–º–∏–Ω–∫–∏\n" +
          "‚Ä¢ –í–æ–¥–∞\n" +
          "  - –í–†: 1 –º–∏–Ω—É—Ç–∞\n\n" +

          `üîπ *–ë–ª–æ–∫ 2: ${theme1}*\n` +
          "‚Ä¢ –¢–µ—Ö–Ω–∏–∫–∞ —Å –∏–≥—Ä–æ–≤—ã–º –∑–∞–¥–∞–Ω–∏–µ–º\n" +
          "  - –í–†: 8 –º–∏–Ω—É—Ç\n" +
          "  - –¢–µ–∫—Å—Ç: –¢—É—Ç –±—É–¥–µ—Ç –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å—Å—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è 1 —Ç–µ–º—ã\n" +
          "‚Ä¢ –ò–≥—Ä–∞ –Ω–∞ —Ç–µ–º—É 1\n" +
          "  - –í–†: 8 –º–∏–Ω—É—Ç\n" +
          "  - –¢–µ–∫—Å—Ç: –¢—É—Ç –±—É–¥–µ—Ç –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å—Å—è –∏–≥—Ä–∞ –¥–ª—è 1 —Ç–µ–º—ã\n" +
          "‚Ä¢ –í–æ–¥–∞\n" +
          "  - –í–†: 1 –º–∏–Ω—É—Ç–∞\n\n" +

          `üîπ *–ë–ª–æ–∫ 3: ${theme2}*\n` +
          "‚Ä¢ –¢–µ—Ö–Ω–∏–∫–∞ —Å –∏–≥—Ä–æ–≤—ã–º –∑–∞–¥–∞–Ω–∏–µ–º\n" +
          "  - –í–†: 8 –º–∏–Ω—É—Ç\n" +
          "  - –¢–µ–∫—Å—Ç: –¢—É—Ç –±—É–¥–µ—Ç –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å—Å—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è 2 —Ç–µ–º—ã\n" +
          "‚Ä¢ –ò–≥—Ä–∞ –Ω–∞ —Ç–µ–º—É 2\n" +
          "  - –í–†: 8 –º–∏–Ω—É—Ç\n" +
          "  - –¢–µ–∫—Å—Ç: –¢—É—Ç –±—É–¥–µ—Ç –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å—Å—è –∏–≥—Ä–∞ –¥–ª—è 2 —Ç–µ–º—ã\n" +
          "‚Ä¢ –í–æ–¥–∞\n" +
          "  - –í–†: 1 –º–∏–Ω—É—Ç–∞\n\n" +

          "üîπ *–ë–ª–æ–∫ 4: –°–≤–æ–±–æ–¥–Ω–∞—è –∏–≥—Ä–∞/–ò—Ç–æ–≥–∏*\n" +
          "‚Ä¢ –ò–≥—Ä–∞\n" +
          "  - –í–†: 15 –º–∏–Ω—É—Ç\n" +
          "  - –¢–µ–∫—Å—Ç: –¢—É—Ç –±—É–¥–µ—Ç –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å—Å—è –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å–≤–æ–±–æ–¥–Ω–æ–π –∏–≥—Ä—ã\n" +
          "‚Ä¢ –ü–æ–¥–≤–µ–¥–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤\n" +
          "  - –í–†: 5 –º–∏–Ω—É—Ç\n\n";

      bot.sendMessage(chatId, structureMessage, { parse_mode: 'Markdown' })
        .then(() => resolve())
        .catch(error => reject(error));
    } catch (error) {
      reject(error);
    }
  });
}

// –í–æ–∑–≤—Ä–∞—Ç –∫ –Ω–∞—á–∞–ª—É
function goBackToStart(chatId) {
  userData.delete(chatId);
  bot.sendMessage(chatId, MESSAGES.WELCOME, {
    reply_markup: KEYBOARDS.START
  });
}

console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...");